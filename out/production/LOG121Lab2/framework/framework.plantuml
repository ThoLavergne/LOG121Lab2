@startuml

title __FRAMEWORK's Class Diagram__\n

  namespace framework {
    abstract class framework.ComparableCollection {
        - capacite : int
        - tabComparable : Comparable[]
        + ComparableCollection()
        + ComparableCollection()
        + add()
        + addAll()
        + afficherComparables()
        + clear()
        + contains()
        + containsAll()
        + first()
        + getCapacite()
        + getTabComparable()
        + isEmpty()
        + iterator()
        + last()
        + remove()
        + removeAll()
        + retainAll()
        + setTabComparables()
        + size()
        + toArray()
        + toArray()
        ~ getComparable()
        ~ setComparable()
        - add()
        - etendre()
        - etendre()
    }
  }
  

  namespace framework {
    class framework.De {
        - faceObtenue : int
        - nbFaces : int
        + De()
        + compareTo()
        + getFaceObtenue()
        + getNbFaces()
        + setFaceObtenue()
    }
  }
  

  namespace framework {
    class framework.DeCollection {
        {static} - rand : Random
        + toutBrasser()
    }
  }
  

  namespace framework {
    abstract class framework.Factory {
        + creerPartie()
        # creerDes()
        # creerJeu()
        {abstract} # strategie()
        - creerPlayers()
    }
  }
  

  namespace framework {
    class framework.Jeu {
        - nbTours : int
        - tourActuel : int
        + Jeu()
        + calculerLeVainqueur()
        + calculerScoreTour()
        + getDes()
        + getNbTours()
        + getPlayerActif()
        + getPlayers()
        + getStrategie()
        + getTourActuel()
        + jouerPartie()
        + setDes()
        + setNbTours()
        + setPlayerActif()
        + setPlayers()
        + setStrategie()
        + setTourActuel()
    }
  }
  

  namespace framework {
    class framework.Player {
        - name : String
        - score : int
        + Player()
        + compareTo()
        + getName()
        + getScore()
        + setName()
        + setScore()
        + toString()
    }
  }
  

  namespace framework {
    class framework.PlayerCollection {
        + afficherComparables()
        + triDecroissant()
    }
  }
  

  namespace framework {
    abstract class framework.Strategie {
        {abstract} + calculerLeVainqueur()
        {abstract} + calculerScoreTour()
    }
  }
  

  namespace framework {
    class framework.TabIterator {
        ~ position : int
        - tab : Object[]
        + TabIterator()
        + goToHead()
        + hasNext()
        + next()
        + stepBack()
    }
  }
  

  framework.ComparableCollection .up.|> java.util.Collection
  framework.De .up.|> java.lang.Comparable
  framework.DeCollection -up-|> framework.ComparableCollection
  framework.Jeu o-- framework.DeCollection : des
  framework.Jeu o-- framework.Player : playerActif
  framework.Jeu o-- framework.PlayerCollection : players
  framework.Jeu o-- framework.Strategie : strategie
  framework.Player .up.|> java.lang.Comparable
  framework.PlayerCollection -up-|> framework.ComparableCollection
  framework.TabIterator .up.|> java.util.Iterator


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
